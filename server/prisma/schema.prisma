// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String 
  email String @unique
  password String?
  role UserRole @default(USER)
  provider Provider
  resetPasswordCode String? @unique
  userProject User_Project[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

enum Provider {
  CREDENTIALS
  GOOGLE
}

model Project {
  id String @id @default(uuid())
  userProject User_Project[]
  invitation Invitation[]
  projectEntries ProjectEntries[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(50)
  description String @db.VarChar(250)
  status ProjectStatus @default(OPEN)
}

enum ProjectStatus {
  OPEN
  CLOSED
}

//TODO Add ProjectEntries Fields
model ProjectEntries {
  id String @id @default(uuid())
  project Project @relation(fields: [projectId], references: [id])
  projectId String
}

model User_Project {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  role ProjectRole @default(VIEWER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ProjectRole {
  CREATOR
  EDITOR
  VIEWER
}

model Invitation {
  id StringÂ @id @default(uuid())
  email String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  role InvitationRole @default(VIEWER) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum InvitationRole {
  EDITOR
  VIEWER
}